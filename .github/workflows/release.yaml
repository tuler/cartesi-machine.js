name: Release
on:
    push:
        branches:
            - main
concurrency: ${{ github.workflow }}-${{ github.ref }}
permissions:
    contents: read
    deployments: write
jobs:
    dependencies:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  submodules: recursive

            - name: Cache machine-emulator dependencies
              uses: actions/cache@v4
              with:
                  path: machine-emulator/third-party
                  key: ${{ hashFiles('machine-emulator/third-party/dependencies') }}-${{ hashFiles('machine-emulator/Makefile') }}
                  enableCrossOsArchive: true

            - name: Download machine-emulator dependencies
              working-directory: machine-emulator
              run: |
                  make dep
                  make bundle-boost

    build:
        runs-on: ${{ matrix.os }}
        needs: [dependencies]
        strategy:
            matrix:
                os: [ubuntu-22.04, macos-12, macos-14]
                node: [18, 20]
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  submodules: recursive
            - uses: actions/setup-python@v5
              with:
                  python-version: "3.11"

            - uses: pnpm/action-setup@v3

            - name: Setup Node.js ${{ matrix.node }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node }}
                  cache: "pnpm"

            - name: Cache machine-emulator dependencies
              uses: actions/cache@v4
              with:
                  path: machine-emulator/third-party
                  key: ${{ hashFiles('machine-emulator/third-party/dependencies') }}-${{ hashFiles('machine-emulator/Makefile') }}
                  enableCrossOsArchive: true
                  fail-on-cache-miss: true

            - name: Install Dependencies
              run: pnpm install

            - name: Package
              run: pnpm run package

            - name: Upload binary
              uses: actions/upload-artifact@v4
              with:
                  name: binary-${{ matrix.os }}-${{ matrix.node}}
                  path: build/stage/**

    release:
        name: Release
        runs-on: ubuntu-latest
        needs: [build]
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  submodules: recursive
            - uses: actions/setup-python@v5
              with:
                  python-version: "3.11"

            - uses: pnpm/action-setup@v3

            - name: Setup Node.js 20
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: "pnpm"

            - name: Cache machine-emulator dependencies
              uses: actions/cache@v4
              with:
                  path: machine-emulator/third-party
                  key: ${{ hashFiles('machine-emulator/third-party/dependencies') }}-${{ hashFiles('machine-emulator/Makefile') }}
                  enableCrossOsArchive: true
                  fail-on-cache-miss: true

            - name: Install Dependencies
              run: pnpm install

            - name: Create Release Pull Request
              id: changesets
              uses: changesets/action@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Get published package version
              id: version
              run: |
                  VERSION=$(echo $changeset_outputs_published_packages | jq '.[0].version')
                  echo "::set-output name=version::$VERSION"
              env:
                  changeset_outputs_published_packages: ${{ steps.changesets.outputs.publishedPackages }}

            - name: Download binaries
              uses: actions/download-artifact@v4
              if: steps.changesets.outputs.hasChangesets == 'false'
              with:
                  pattern: binary-*
                  path: build/stage/${{ steps.version.outputs.version }}
                  merge-multiple: true

            - name: Publish package
              if: steps.changesets.outputs.hasChangesets == 'false'
              run: pnpm release

            - name: Publish binaries
              uses: softprops/action-gh-release@v2
              if: steps.changesets.outputs.hasChangesets == 'false'
              with:
                  files: |
                      build/stage/${{ steps.version.outputs.version }}/**
